# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
dist/
build/
.next/
.nuxt/
.output/
.cache/
coverage/
reports/
logs/
temp/
tmp/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Package manager files
package-lock.json
yarn.lock
pnpm-lock.yaml

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Angular specific
.angular/
*.tsbuildinfo
proxy.conf.json

# React specific
.eslintcache

# Vue specific
.vuepress/dist

# Svelte specific
.svelte-kit/

# Next.js specific
.next/
out/

# TypeScript
*.tsbuildinfo
.tscache/

# ESLint
.eslintcache

# Prettier
.prettiercache

# Stylelint
.stylelintcache

# Flutter Web build files (개발용은 제외)
# 예제의 Flutter 앱 파일들은 포함하되, 빌드 산출물만 제외
*.dart.js.map
canvaskit/
flutter_service_worker.js
version.json

# Flutter 빌드 산출물 (개발 서버에서 생성되는 것들)
# idev-app/ 폴더는 예제에 필요하므로 주석 처리
# idev-app/

# Test files
test-results/
playwright-report/
test-results.xml

# Temporary files
*.tmp
*.temp
*.log

# Development tools
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries/
.idea/shelf/

# Local development
.local/
.cache/
.temp/

# Backup files
*.bak
*.backup
*.orig

# Lock files (선택적으로 유지할 수 있음)
# package-lock.json
# yarn.lock
# pnpm-lock.yaml
